# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This example forwards to httpbin.org.
# The Apigee API Product must be bound to `httpbin.org`.
# You may use either JWT or API Key to authenticate.
# Before use, you must edit and change:
# 1. all references to `org.apigee.net` to your Apigee runtime.
# 2. the apigee-remote-service-envoy cluster's `socket_address` to service location.

admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9000

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 8080 }

    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:  
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          access_log:
          - name: envoy.file_access_log
            config:
              path: "/var/log/access.log"
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: /httpbin
                route:
                  prefix_rewrite: /
                  cluster: httpbin
                  upgrade_configs:
                    - upgrade_type: websocket
                per_filter_config:
                  envoy.filters.http.dynamic_forward_proxy: # rewrite :authority for Apigee product check
                    host_rewrite: httpbin.org

          http_filters:

          # rewrite :authority for Apigee product check
          - name: envoy.filters.http.dynamic_forward_proxy
            config:
              dns_cache_config: 
                name: dynamic_forward_proxy_cache_config
                dns_lookup_family: "V4_ONLY"

          # evaluate JWT tokens, allow_missing allows API Key also
          - name: envoy.filters.http.jwt_authn
            config:
              providers:
                apigee:
                  issuer: https://org.apigee.net/remote-service/token
                  audiences:
                  - remote-service-client
                  remote_jwks:
                    http_uri:
                      uri: https://org.apigee.net/remote-service/certs
                      cluster: apigee-auth-service
                      timeout: 5s
                    cache_duration:
                      seconds: 300
                  payload_in_metadata: apigee
              rules:
              - match:
                  prefix: /
                requires:
                  requires_any:
                    requirements:
                    - provider_name: apigee
                    - allow_missing: {}

          # evaluate Apigee rules
          - name: envoy.ext_authz
            config:
              grpc_service:
                envoy_grpc:
                  cluster_name: apigee-remote-service-envoy
                timeout: 1s                
              metadata_context_namespaces:
              - envoy.filters.http.jwt_authn

          # evaluate RBAC (necessary for Apigee config: reject_unauthorized == false)
          - name: envoy.filters.http.rbac
            config:
              rules:
                action: ALLOW
                policies:
                  apigee-connector:
                    principals:
                    - any: true
                    permissions:
                    - header: { "name": "X-Apigee-Authorized" }

          - name: envoy.filters.http.router
              

  clusters:
    
  # define cluster for httpbin.org target
  - name: httpbin
    connect_timeout: 2s
    http_protocol_options: {}
    type: strict_dns
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: httpbin
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: wsserver
                port_value: 8080

  # define cluster for Apigee remote service
  - name: apigee-remote-service-envoy
    type: STRICT_DNS
    http2_protocol_options: {}
    load_assignment:
      cluster_name: apigee-remote-service-envoy
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: apigeers
                port_value: 5000
    common_lb_config:
      healthy_panic_threshold:
        value: 50.0
    health_checks:
      - timeout: 1s
        interval: 5s
        interval_jitter: 1s
        no_traffic_interval: 5s
        unhealthy_threshold: 1
        healthy_threshold: 3
        grpc_health_check: {}
    connect_timeout: 0.25s
    # for custom SSL connection to remote-service
    # transport_socket: 
    #   name: envoy.transport_sockets.tls
    #   typed_config:
    #     "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
    #     common_tls_context:
    #       tls_certificates: 
    #       - certificate_chain: { filename: "/tls.crt" }
    #         private_key: { filename: "/tls.key" }

  # define cluster for Apigee JWKS certs
  - name: apigee-auth-service
    connect_timeout: 2s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: apigee-auth-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: org.apigee.net
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
        sni: org.apigee.net
